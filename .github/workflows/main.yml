name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Flask dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r backend/requirements.txt

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install and Build React App
        run: |
          cd frontend
          npm install
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy React to S3
        working-directory: frontend
        run: |
          aws s3 sync build/ s3://react-frontend-bucket-cd3c2ef7b3cfd96c --delete


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy Backend to EC2
        working-directory: PROG8860-Final-Project
        run: |
          # Compress the backend folder for transfer
          zip -r backend.zip backend/
          
          # Copy the backend.zip to the EC2 instance
          scp -i ~/.ssh/id_rsa backend.zip ec2-user@3.90.254.241:/home/ec2-user/
          
          # SSH into the EC2 instance to extract and restart the Flask application
          ssh -i ~/.ssh/id_rsa ec2-user@3.90.254.241 << 'EOF'
          cd /home/ec2-user/
          unzip -o backend.zip
          # Ensure Flask service restarts (assuming systemd unit is flaskapp)
          sudo systemctl restart flaskapp
          EOF


